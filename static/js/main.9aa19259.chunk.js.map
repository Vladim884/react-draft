{"version":3,"sources":["components/Navbar.jsx","redux/actions.js","redux/types.js","components/Nav.jsx","components/ServerData.jsx","components/ShowWindowDimensions.jsx","components/ServerDataContainer.jsx","components/SectionTop.jsx","App.js","serviceWorker.js","redux/putDataReducer.js","redux/hamburgerMenuReducer.js","redux/sagas.js","redux/redux_store.js","index.js"],"names":["Navbar","updateDimensions","setState","width","window","innerWidth","state","props","onClickMenuClose","console","log","addEventListener","this","removeEventListener","className","hamburgerMenuClass","onClick","href","src","alt","onClickHamburgerMenu","type","data-target","aria-controls","aria-expanded","aria-label","id","role","data-toggle","aria-haspopup","aria-labelledby","placeholder","React","Component","connect","hamburgerMenu","classMenu","Nav","tabIndex","aria-disabled","ServerData","dispatch","useDispatch","myNewData","serverData","useSelector","putData","data","Object","keys","length","userId","title","ServerDataContainer","SectionTop","data-parallax","data-speed","data-image-src","App","Boolean","location","hostname","match","initialState","hamburgerMenuReducer","action","loadDataWorker","watchLoadData","fetchData","fetch","then","response","json","call","put","payload","takeEvery","require","createStore","combineReducers","applyMiddleware","sagaMiddleware","createSagaMiddleware","store","logger","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9aa19259.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {onClickHamburgerMenu, onClickMenuClose} from '../redux/actions';\r\n\r\nclass Navbar extends React.Component{\r\n  \r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth});\r\n    if(this.state.width > 992){\r\n      this.props.onClickMenuClose()\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    console.log('componentDidMount');\r\n    window.addEventListener('resize', this.updateDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    console.log('componentWillUnmount');\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg fixed-top sticky-top navbar-dark\">\r\n        <div className=\"container\">\r\n        <div className={this.props.hamburgerMenuClass}>\r\n          <ul>\r\n            <li>ELO bust services</li>\r\n            <li>Buy lolaccount</li>\r\n            <li>Valorant Boosting </li>\r\n            <li>TFT Boosting</li>\r\n            <li>Coaching</li>\r\n            <li>Boosters</li>\r\n            <li>Blog</li>\r\n          </ul>\r\n          <span className=\"close\" onClick={()=>{this.props.onClickMenuClose()}}>X</span>\r\n        </div>\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <span className=\"logo hvr-pulse\">\r\n              <img\r\n                src=\"https://www.boostroyal.com/assets/images/new/logo-icon.png\"\r\n                alt=\"\"\r\n              />\r\n            </span>\r\n            <span className=\"hvr-grow\">\r\n              <img\r\n                src=\"https://www.boostroyal.com/assets/images/new/logo-text.png\"\r\n                alt=\"\"\r\n              />\r\n            </span>\r\n          </a>\r\n          <button\r\n            onClick={() => {\r\n              this.props.onClickHamburgerMenu();\r\n            }}\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            // data-toggle=\"collapse\" //  commented out for disabling bootstrap js-code\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item active hvr-underline-reveal\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Home <span className=\"sr-only\">(current)</span>\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item hvr-underline-reveal\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Link\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item hvr-underline-reveal dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Action\r\n                  </a>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Another action\r\n                  </a>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <a className=\"dropdown-item\" href=\"#\">\r\n                    Something else here\r\n                  </a>\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item hvr-underline-reveal\">\r\n                <a className=\"nav-link disabled\" href=\"#\">\r\n                  Disabled\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <form className=\"form-inline my-2 my-lg-0\">\r\n              <input\r\n                className=\"form-control mr-sm-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button\r\n                className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                type=\"submit\"\r\n              >\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    hamburgerMenuClass: state.hamburgerMenu.classMenu,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {onClickHamburgerMenu, onClickMenuClose})(Navbar);\r\n\r\n","import { LOAD_DATA, ON_CLICK_HAMBURGER_MENU, ON_CLICK_MENU_CLOSE, PUT_DATA } from \"./types\";\r\n\r\nexport const onClickHamburgerMenu = () => ({type: ON_CLICK_HAMBURGER_MENU});\r\nexport const onClickMenuClose = () => ({type: ON_CLICK_MENU_CLOSE});\r\nexport const putData = (dataFormServer) => ({type: PUT_DATA, payload: dataFormServer});\r\n\r\n\r\n// export const loadData = () => (dispatch, getState) => {\r\n//     console.log(getState());\r\n//     fetch('http://jsonplaceholder.typicode.com/todos/1')\r\n//     .then(response => response.json())\r\n//     .then(json => {\r\n//         dispatch(putData(json));\r\n//     })\r\n// }\r\n\r\nexport const loadData = () => ({type: LOAD_DATA});\r\n","export const ON_CLICK_HAMBURGER_MENU = 'ON_CLICK_HAMBURGER_MENU';\r\nexport const ON_CLICK_MENU_CLOSE = 'ON_CLICK_HAMBURGER_MENU_CLOSE';\r\nexport const PUT_DATA = 'PUT_DATA';\r\nexport const LOAD_DATA = 'LOAD_DATA';","import React from \"react\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navtop navbar navbar-expand-lg navbar-dark \">\r\n        <div className=\"container\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        Navbar\r\n      </a>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              Home <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              Features\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">\r\n              Pricing\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link disabled\"\r\n              href=\"#\"\r\n              tabIndex=\"-1\"\r\n              aria-disabled=\"true\"\r\n            >\r\n              Disabled\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadData } from \"../redux/actions\";\r\n\r\nconst ServerData = (props) => {\r\n  const dispatch = useDispatch();\r\n  const getData = () => dispatch(loadData({}));\r\n// console.log(props.serverData);\r\nconst myData = props.serverData;\r\nconst myNewData = useSelector(state => state.putData.data);\r\nconsole.log(myNewData);\r\n  return (\r\n    <div className=\"lorem\">\r\n      <h2>My server Data (from saga)</h2>\r\n      \r\n  <p>My server-id: {Object.keys(myNewData).length!=0?myNewData.userId\r\n  : 'No data'}\r\n  \r\n \r\n  </p>\r\n  <p>My server-title: {Object.keys(myNewData).length != 0?myNewData.title: 'No data'}</p>\r\n      <button onClick={getData}>Get Data</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerData;\r\n","import React from 'react';\r\n\r\nclass ShowWindowDimensions extends React.Component {\r\n  state = { width: 0, height: 0 };\r\n  render() {\r\n    return <span>Window size: {this.state.width} x {this.state.height}</span>;\r\n  }\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n  }\r\n}\r\n\r\nexport default ShowWindowDimensions;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ServerData from './ServerData';\r\n\r\nclass ServerDataContainer extends React.Component {\r\n  render(){\r\n      return <ServerData serverData={this.props.serverData} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    serverData: state.putData.data\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ServerDataContainer);","import React from \"react\";\r\n\r\nconst SectionTop = () => {\r\n  return (\r\n    <div\r\n      className=\"section_top parallax-window\"\r\n      data-parallax=\"scroll\"\r\n      data-speed=\"0.5\"\r\n      data-image-src=\"https://www.boostroyal.com/assets/images/new/hero-bg-lux2.jpg\"\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"container_title\">\r\n          <h2>\r\n            Get Your LoL ELO Boost Now and Save Up to\r\n            <span className=\"orange\">30%</span>\r\n          </h2>\r\n        </div>\r\n        <div className=\"subtitle\">\r\n          <h6>\r\n            Safe and Reliable LoL ELO Boosting, Coaching & Account Buying\r\n            Services in Season 10\r\n          </h6>\r\n        </div>\r\n        <div className=\"link_group\">\r\n          <a className=\"btn btn-outline-primary\" href=\"#\" role=\"button\">\r\n            Boost Me\r\n          </a>\r\n          <a className=\"btn btn-outline-warning\" href=\"#\" role=\"button\">\r\n            Buy LoL Account\r\n          </a>\r\n          <a className=\"btn btn-outline-success\" href=\"#\" role=\"button\">\r\n            Coach Me\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionTop;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Nav from './components/Nav';\r\nimport ShowWindowDimensions from './components/ShowWindowDimensions';\r\nimport ServerData from './components/ServerDataContainer';\r\nimport SectionTop from './components/SectionTop';\r\n// import {sagaMiddleware} from './redux/redux_store'\r\n// import { watchLoadData } from './redux/sagas';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Navbar />\r\n      <SectionTop />\r\n      <ServerData />\r\n      <ServerData />\r\n      <ServerData />\r\n      <ServerData />\r\n      {/* <ShowWindowDimensions /> */} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { PUT_DATA } from \"./types\";\r\n\r\nconst initialState = {\r\n    data: {}\r\n}\r\n\r\nexport const putDataReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case PUT_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ON_CLICK_HAMBURGER_MENU, ON_CLICK_MENU_CLOSE} from './types'\r\n\r\nconst initialState = {\r\n    classMenu: 'hide_menu',\r\n}\r\n\r\nconst hamburgerMenuReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case ON_CLICK_HAMBURGER_MENU:\r\n            return {\r\n                ...state,\r\n                classMenu: 'show_menu'\r\n            }\r\n        case ON_CLICK_MENU_CLOSE:\r\n            return {\r\n                ...state,\r\n                classMenu: 'hide_menu'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default hamburgerMenuReducer;","import {call, put, takeEvery} from 'redux-saga/effects';\r\nimport { LOAD_DATA } from './types';\r\nimport {putData} from './actions'\r\n\r\nfunction fetchData(){\r\n    return fetch('http://jsonplaceholder.typicode.com/todos/1')\r\n        .then(response => response.json());\r\n}\r\n\r\nfunction* loadDataWorker() {\r\n    const data = yield call(fetchData); // !!! function object!\r\n    yield put(putData(data)); // as dispatch\r\n}\r\n\r\nexport function* watchLoadData() {\r\n    yield takeEvery(LOAD_DATA, loadDataWorker);\r\n}","import thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { putDataReducer } from \"./putDataReducer\";\r\nimport hamburgerMenuReducer from \"./hamburgerMenuReducer\";\r\nimport { watchLoadData } from './sagas';\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nexport const sagaMiddleware = createSagaMiddleware();\r\n\r\nlet reducers = combineReducers({\r\n    hamburgerMenu: hamburgerMenuReducer,\r\n    putData: putDataReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(logger,sagaMiddleware));\r\nsagaMiddleware.run(watchLoadData);\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux_store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}